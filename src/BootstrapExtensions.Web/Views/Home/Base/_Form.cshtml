@using BootstrapExtensions.Base
@using BootstrapExtensions.Base.Button
@using BootstrapExtensions.Base.Form
@using BootstrapExtensions.Components.Alert
@using (Html.Section("Form", new { id = "form" }))
{

    <h2>Default styles</h2>
    <p>To use Bootstrap forms use <code>using (Html.Form()) { ... }</code>, in the same way that you would use <code>using (Html.BeginForm()) { ... }</code>. Individual form controls receive styling, resulting in stacked, left-aligned labels on top of form controls.</p>
    
    using (Html.Form("Base", "Home", FormMethod.Get, new { @class = "bs-docs-example" }))
    {
        <legend>Legend</legend>
        <label>Label name</label>
        <input type="text" placeholder="Type something…">
        <span class="help-block">Example block-level help text here.</span>
        <label class="checkbox">
        <input type="checkbox"> Check me out
        </label>
        <button type="submit" class="btn">Submit</button>
    }
    <pre class="prettyprint linenums">&#64;using (Html.Form()) {
    &lt;legend&gt;Legend&lt;/legend&gt;
    &lt;label&gt;Label name&lt;/label&gt;
    &lt;input type="text" placeholder="Type something…"&gt;
    &lt;span class="help-block"&gt;Example block-level help text here.&lt;/span&gt;
    &lt;label class="checkbox"&gt;
        &lt;input type="checkbox"&gt; Check me out
    &lt;/label&gt;
    &lt;button type="submit" class="btn"&gt;Submit&lt;/button&gt;
}</pre>

    <hr class="bs-docs-separator">

    <h2>Optional layouts</h2>
    <p>Included with Bootstrap are three optional form layouts for common use cases.</p>

    <h3>Search form</h3>
    <p>Use <code>Html.SearchForm()</code> for an extra-rounded text input.</p>
    using (Html.SearchForm("Base", "Home", FormMethod.Get, new { @class = "bs-docs-example" }))
    {
        <input type="text" class="input-medium search-query">
        <button type="submit" class="btn">Search</button>
    }
    <pre class="prettyprint">&#64;using (Html.SearchForm()) {
    &lt;input type="text" class="input-medium search-query"&gt;
    &lt;button type="submit" class="btn"&gt;Search&lt;/button&gt;
}</pre>

    <h3>Inline form</h3>
    <p>Use <code>Html.InlineForm()</code> for left-aligned labels and inline-block controls for a compact layout.</p>
    
    using (Html.InlineForm("Base", "Home", FormMethod.Get, new { @class = "bs-docs-example" })) {
        <input type="text" class="input-small" placeholder="Email">
        <input type="password" class="input-small" placeholder="Password">
        <label class="checkbox">
            <input type="checkbox"> Remember me
        </label>
        <button type="submit" class="btn">Sign in</button>
    }
<pre class="prettyprint linenums">&#64;using (Html.InlineForm()) {
    &lt;input type="text" class="input-small" placeholder="Email"&gt;
    &lt;input type="password" class="input-small" placeholder="Password"&gt;
    &lt;label class="checkbox"&gt;
        &lt;input type="checkbox"&gt; Remember me
    &lt;/label&gt;
    &lt;button type="submit" class="btn"&gt;Sign in&lt;/button&gt;
}</pre>

    <h3>Horizontal form</h3>
    <p>Use <code>Html.HorizontalForm()</code> to right align labels and float them to the left, making them appear on the same line as controls. Requires the most markup changes from a default form:</p>
    using (Html.HorizontalForm("Base", "Home", FormMethod.Get, new { @class = "bs-docs-example" }))
    {
        <div class="control-group">
            <label class="control-label" for="inputEmail">Email</label>
            <div class="controls">
                <input type="text" id="inputEmail" placeholder="Email">
            </div>
        </div>
        <div class="control-group">
            <label class="control-label" for="inputPassword">Password</label>
            <div class="controls">
                <input type="password" id="inputPassword" placeholder="Password">
            </div>
        </div>
        <div class="control-group">
            <div class="controls">
                <label class="checkbox">
                    <input type="checkbox"> Remember me
                </label>
                <button type="submit" class="btn">Sign in</button>
            </div>
        </div>
    }
<pre class="prettyprint">&#64;using (Html.HorizontalForm())
{
    &lt;div class="control-group"&gt;
        &lt;label class="control-label" for="inputEmail"&gt;Email&lt;/label&gt;
        &lt;div class="controls"&gt;
            &lt;input type="text" id="inputEmail" placeholder="Email"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="control-group"&gt;
        &lt;label class="control-label" for="inputPassword"&gt;Password&lt;/label&gt;
        &lt;div class="controls"&gt;
            &lt;input type="password" id="inputPassword" placeholder="Password"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="control-group"&gt;
        &lt;div class="controls"&gt;
            &lt;label class="checkbox"&gt;
                &lt;input type="checkbox"&gt; Remember me
            &lt;/label&gt;
            &lt;button type="submit" class="btn"&gt;Sign in&lt;/button&gt;
        &lt;/div&gt;
    &lt;/div&gt;
}</pre>
@*@Html.Alert("Heads up!", "Using Html.LabelAndControl() with horizontal forms will automatically take care of the required markup changes for labels/inputs", Category.Info)*@

    <hr class="bs-docs-separator">
        
}